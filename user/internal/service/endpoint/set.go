// Code generated by Godin v0.3.0; DO NOT EDIT.

package endpoint

import (
	"github.com/go-kit/kit/endpoint"
	"github.com/go-kit/kit/metrics"

	"github.com/lukasjarosch/godin-examples/user/internal/service"
	godin "github.com/lukasjarosch/godin/pkg/middleware"
)

type Set struct {
	CreateEndpoint endpoint.Endpoint
	GetEndpoint    endpoint.Endpoint
	ListEndpoint   endpoint.Endpoint
	DeleteEndpoint endpoint.Endpoint
}

func Endpoints(service service.User, duration metrics.Histogram, frequency metrics.Counter) Set {

	var create endpoint.Endpoint
	{
		create = CreateEndpoint(service)
		create = godin.LatencyMiddleware(duration, "Create")(create)
		create = godin.RequestFrequency(frequency, "Create")(create)
	}
	var get endpoint.Endpoint
	{
		get = GetEndpoint(service)
		get = godin.LatencyMiddleware(duration, "Get")(get)
		get = godin.RequestFrequency(frequency, "Get")(get)
	}
	var list endpoint.Endpoint
	{
		list = ListEndpoint(service)
		list = godin.LatencyMiddleware(duration, "List")(list)
		list = godin.RequestFrequency(frequency, "List")(list)
	}
	var delete endpoint.Endpoint
	{
		delete = DeleteEndpoint(service)
		delete = godin.LatencyMiddleware(duration, "Delete")(delete)
		delete = godin.RequestFrequency(frequency, "Delete")(delete)
	}

	return Set{
		CreateEndpoint: create,
		GetEndpoint:    get,
		ListEndpoint:   list,
		DeleteEndpoint: delete,
	}
}
